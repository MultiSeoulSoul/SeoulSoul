<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">

	<!-- UserDTO의 resultMap 정의 -->
    <resultMap id="userResultMap" type="com.multi.seoulsoul.user.model.dto.UserDTO">
        <id property="userNo" column="user_no"/>
        <result property="userId" column="user_id"/>
        <result property="userPw" column="user_pw"/>
        <result property="nickname" column="nickname"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="blacklistStatus" column="blacklist_status"/>
        <result property="createdDate" column="created_date"/>
    </resultMap>

    <!-- UserAuthorityDTO의 resultMap 정의 -->
    <resultMap id="userAuthorityResultMap" type="com.multi.seoulsoul.user.model.dto.UserAuthorityDTO">
        <id property="authorityCode" column="authority_code"/>
        <result property="authorityName" column="authority_name"/>
        <result property="authorityDesc" column="authority_desc"/>
    </resultMap>

    <!-- UserRoleDTO의 resultMap 정의 -->
    <resultMap id="userRoleResultMap" type="com.multi.seoulsoul.user.model.dto.UserRoleDTO">
        <id property="userNo" column="user_no"/>
        <result property="authorityCode" column="authority_code"/>
    </resultMap>

	<!-- 아이디 중복 체크 -->
	<select id="findByUserId" parameterType="String" resultType="boolean">
		SELECT COUNT(1) > 0 
	    FROM users 
	    WHERE user_id = #{userId}
	</select>
	
	<!-- 닉네임 중복 체크 -->
	<select id="findByNickname" parameterType="String" resultType="boolean">
		SELECT COUNT(1) > 0 
	    FROM users 
	    WHERE nickname = #{nickname}
	</select>

	<!-- 회원가입 -->
	<insert id="joinUser" parameterType="userDTO" useGeneratedKeys="true" keyProperty="userNo">
	    INSERT INTO users (user_id, user_pw, nickname, phone, email)
	    VALUES (#{userId}, #{userPw}, #{nickname}, #{phone}, #{email})
	</insert>
	<select id="selectLastInsertId" resultType="int">
		<!-- LAST_INSERT_ID(): MySQL에서 마지막으로 AUTO_INCREMENT된 값을 반환하는 함수 -->
	    SELECT LAST_INSERT_ID()
	</select>
	<insert id="insertUserRole" parameterType="int">
	    INSERT INTO user_role (user_no)
	    VALUES (#{userNo})
	</insert>
	<insert id="insertUserProfile" parameterType="int">
	    INSERT INTO USER_PROFILE (user_no, profile_content, profile_pic_name)
	    VALUES (#{userNo}, '', 'defaultProfile.jpg')
	</insert>
	
	<!-- 회원정보 변경 -->
	<update id="userUpdate" parameterType="userDTO">
		UPDATE USERS
		SET
			nickname = #{nickname},
			phone = #{phone},
			email = #{email}
	    WHERE user_no = #{userNo}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="userPwUpdate" parameterType="userDTO">
		UPDATE USERS
		SET user_pw = #{userPw}
	    WHERE user_no = #{userNo}
	</update>

	<!-- 회원탈퇴 -->
	<delete id="userDelete" parameterType="int">
		DELETE FROM USERS
		WHERE user_no = #{userNo};
	</delete>

    <!-- 시큐리티 사용 시 쿼리 -->
    <select id="findUserByUsername" parameterType="String" resultType="userDTO">
        SELECT 
	        u.user_no,
	        u.user_id,
	        u.user_pw,
	        u.nickname,
	        u.phone,
	        u.email,
	        u.blacklist_status,
	        u.created_date,
	        up.profile_content,
	        up.profile_pic_name
	    FROM 
	        USERS u
	    LEFT JOIN 
	        USER_PROFILE up ON u.user_no = up.user_no
	    WHERE 
	        u.user_id = #{userId}
    </select>
    <select id="findAuthoritiesByUserNo" parameterType="int" resultType="String">
        SELECT ua.authority_name
        FROM USER_ROLE ur
        JOIN USER_AUTHORITY ua ON ur.authority_code = ua.authority_code
        WHERE ur.user_no = #{userNo}
    </select>
    
    
	<!-- 임시 소울로그 조회 -->
	<select id="selectSLBoardPage" parameterType="userPageDTO" resultType="slBoardDTO">
        SELECT 
            b2.soul_log_no,
            l.location_name,
            c.category_name,
            b2.title,
            (SELECT COUNT(*) FROM SL_REPLY r WHERE r.soul_log_no = b2.soul_log_no) AS replyCount,
            b2.created_date,
            b2.views,
            b2.total_count
        FROM (
            SELECT 
                b.*,
                COUNT(*) OVER() AS total_count,
                ROW_NUMBER() OVER (ORDER BY b.soul_log_no DESC) AS rownum
            FROM SL_BOARD b
            WHERE b.writer = #{userNo}
        ) b2
        JOIN LOCATION l ON b2.location_code = l.location_code
        JOIN SL_CATEGORY c ON b2.category_code = c.category_code
        WHERE b2.rownum BETWEEN #{start} AND #{end}
    </select>
    
    
    <!-- 임시 소울로그댓글 조회 -->
	<select id="selectSLReplyPage" parameterType="userPageDTO" resultType="slReplyDTO">
        SELECT
	        b2.count,
	        b2.*
	    FROM (
	        SELECT 
	            b.*,
	            COUNT(*) OVER() AS count,
	            ROW_NUMBER() OVER (ORDER BY b.reply_no DESC) AS rownum
	        FROM SL_REPLY b
	        WHERE b.writer = #{userNo}
	    ) b2
	    WHERE b2.rownum BETWEEN #{start} AND #{end}
    </select>
    
    <!-- 프로필 업데이트 -->
    <update id="updateProfile" parameterType="userProfileDTO">
    	UPDATE USERS u
		JOIN USER_PROFILE up ON u.user_no = up.user_no
		SET 
		    u.nickname = #{nickname},
		    up.profile_content = #{profileContent},
		    up.profile_pic_name = CASE WHEN #{profilePicName} IS NOT NULL THEN #{profilePicName} ELSE up.profile_pic_name END
		WHERE u.user_no = #{userNo};
    </update>

</mapper>
