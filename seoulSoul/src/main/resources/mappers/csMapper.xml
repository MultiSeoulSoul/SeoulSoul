<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="csMapper">
	
	<!-- 문의글 전체 조회: 1. 전체 문의글 수 -->
    <select id="getTotalQuestions" resultType="int">
        SELECT COUNT(*) FROM CS_QUESTION
    </select>
    <!-- 문의글 전체 조회: 2. 페이징 처리된 모든 문의글 -->
    <select id="getQuestions" resultType="csQuestionDTO">
        SELECT 
        	q.question_no, 
        	q.category_code, 
        	q.title, 
        	q.content, 
        	q.writer, 
        	q.created_date, 
        	q.views, 
        	q.is_answered, 
        	c.category_name AS "categoryInfo.categoryName",
			u.nickname AS "writerInfo.nickname"
        FROM CS_QUESTION q
        LEFT JOIN CS_CATEGORY c ON q.category_code = c.category_code
        LEFT JOIN USERS u ON q.writer = u.user_no
        ORDER BY q.created_date DESC
        LIMIT #{offset}, #{pageSize}
    </select>
    <!-- 문의글 전체 조회: 3. 사용자별 전체 문의글 수 -->
    <select id="getTotalQuestionsByUser" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM CS_QUESTION WHERE writer = #{userNo}
    </select>
    <!-- 문의글 전체 조회: 4. 페이징 처리 된 사용자별 문의글 -->
	<select id="getQuestionsByUser" parameterType="map" resultType="csQuestionDTO">
	    SELECT 
            q.question_no,
            q.category_code,
            q.title,
            q.content,
            q.writer,
            q.created_date,
            q.modified_date,
            q.views,
            q.is_answered,
            c.category_name as "categoryInfo.categoryName",
            u.nickname as "writerInfo.nickname"
        FROM CS_QUESTION q
        LEFT JOIN CS_CATEGORY c ON q.category_code = c.category_code
        LEFT JOIN USERS u ON q.writer = u.user_no
        WHERE q.writer = #{userNo}
        ORDER BY q.created_date DESC
        LIMIT #{offset}, #{pageSize}
	</select>
    
    <!-- 문의글 상세 조회: 1. 문의글 상세 가져오기 -->
    <select id="selectQuestionById" parameterType="int" resultType="csQuestionDTO">
        SELECT 
        	q.question_no, 
        	q.title, 
        	q.writer, 
        	q.views, 
        	q.created_date, 
        	q.modified_date, 
        	q.content, 
        	q.category_code,
        	q.is_answered, 
        	c.category_name AS "categoryInfo.categoryName",
        	u.nickname AS "writerInfo.nickname"
        FROM CS_QUESTION q
        LEFT JOIN CS_CATEGORY c ON q.category_code = c.category_code
        LEFT JOIN USERS u ON q.writer = u.user_no
        WHERE q.question_no = #{questionNo}
    </select>
    <!-- 문의글 상세 조회: 2. 첨부파일 가져오기 -->
    <select id="selectFilesByQuestionId" parameterType="int" resultType="csQuestionFileDTO">
        SELECT 
        	file_no, 
        	question_no, 
        	original_file_name, 
        	stored_file_name, 
        	file_path
        FROM CS_QUESTION_FILES
        WHERE question_no = #{questionNo}
    </select>
    <!-- 문의글 상세 조회: 3. 답변 가져오기 -->
    <select id="selectAnswersByQuestionId" parameterType="int" resultType="csAnswerDTO">
	    SELECT 
	        a.answer_no,
	        a.question_no,
	        a.content,
	        a.writer,
	        a.created_date,
	        u.nickname AS "writerInfo.nickname" -- 큰따옴표로 감싸기
	    FROM CS_ANSWER a
	    LEFT JOIN USERS u ON a.writer = u.user_no
	    WHERE a.question_no = #{questionNo}
    </select>
    <!-- 문의글 상세 조회: 4. 조회수 증가시키기 -->
    <update id="increaseViewCount" parameterType="int">
	    UPDATE CS_QUESTION
	    SET 
	    	views = views + 1
	    WHERE 
	    	question_no = #{questionNo}
	</update>
    
    <!-- 문의글 삭제 -->
    <delete id="deleteQuestion" parameterType="int">
		DELETE FROM CS_QUESTION WHERE question_no = #{questionNo}
	</delete>
	
	<!-- 문의글 쓰기: 1. 카테고리 -->
    <select id="getCategories" resultType="CsCategoryDTO">
        SELECT 
            category_code, 
            category_name 
        FROM 
            CS_CATEGORY
    </select>
    <!-- 문의글 쓰기: 2. 문의글 -->
    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="questionNo">
        INSERT INTO CS_QUESTION (category_code, title, content, writer) 
        VALUES (#{categoryCode}, #{title}, #{content}, #{writer})
    </insert>
    <!-- 문의글 쓰기: 3. 첨부파일 -->   
    <insert id="insertFile">
        INSERT INTO CS_QUESTION_FILES (question_no, original_file_name, stored_file_name, file_path) 
        VALUES (#{questionNo}, #{originalFileName}, #{storedFileName}, #{filePath})
    </insert>
        
    <!-- 문의글 수정 -->
    <update id="updateQuestion">
        UPDATE CS_QUESTION 
        SET 
            category_code = #{categoryCode}, 
            title = #{title}, 
            content = #{content}, 
            writer = #{writer}, 
            modified_date = NOW()
        WHERE 
            question_no = #{questionNo}
    </update>
    <!-- 파일 삭제 -->
	<delete id="deleteFile">
	    DELETE FROM CS_QUESTION_FILES
	    WHERE 
	        file_no = #{fileNo}
	</delete>
    
    <!-- 문의글 답변 작성 -->
	<insert id="insertAnswer" parameterType="csAnswerDTO">
	    INSERT INTO CS_ANSWER (question_no, content, writer)
	    VALUES (#{questionNo}, #{content}, #{writer})
	</insert>
	<update id="updateQuestionToAnswered" parameterType="int">
        UPDATE CS_QUESTION
        SET 
        	is_answered = 'Y'
        WHERE 
        	question_no = #{questionNo}
    </update>
    
</mapper>
